Parameters:
  Name:
    Type: String
    Default: StandAlone-LoadBalancer
    
  VpcId:
    Type: AWS::EC2::VPC::Id

  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    
  S3TemplateUrl:
    Type: String
    Default: https://s3-ap-southeast-2.amazonaws.com/cfn-template-ctc94
    Description: S3Template directory.
    
Resources:

  SecurityGroup: 
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${S3TemplateUrl}/basic/SecurityGroup.yml
      Parameters:
        Name: !Ref Name
        VpcId: !Ref VpcId
        CidrIp: 0.0.0.0/0
        IpProtocol: TCP
        FromPort: 80
        ToPort: 80

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets: !Ref Subnets
      SecurityGroups:
        - !GetAtt SecurityGroup.Outputs.SecurityGroup
      Tags:
        - Key: Name
          Value: !Ref Name

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn: LoadBalancer
    Properties:
      VpcId: !Ref VpcId
      Port: 80
      Protocol: HTTP
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 30
      Tags:
        - Key: Name
          Value: !Ref Name
          
  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
          
  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref LoadBalancerListener
      Priority: 1
      Conditions:
        - Field: path-pattern
          Values:
            - /
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward


Outputs:
  TargetGroup:
    Value: !Ref TargetGroup

  ServiceUrl:
    Description: URL of the load balancer for the sample service.
    Value: !Sub http://${LoadBalancer.DNSName}

  SecurityGroup:
    Value: !GetAtt SecurityGroup.Outputs.SecurityGroup
