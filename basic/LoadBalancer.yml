Description: >
  LoadBalancer + SecurityGroup + TargetGroup + LoadBalancerListener + ListenerRule

Parameters:
  Name:
    Type: String
    Default: StandAlone-LoadBalancer
    
  ElbPort:
    Type: Number
    Default: 80
    
  VpcId:
    Type: AWS::EC2::VPC::Id

  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    
  S3TemplateUrl:
    Type: String
    Default: https://s3-ap-southeast-2.amazonaws.com/cfn-template-ctc94
    Description: S3Template directory.
    
Resources:

  SecurityGroup: 
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${S3TemplateUrl}/basic/SecurityGroup.yml
      Parameters:
        Name: !Ref Name
        VpcId: !Ref VpcId
        CidrIp: 0.0.0.0/0
        IpProtocol: TCP
        FromPort: !Ref ElbPort
        ToPort: !Ref ElbPort
        
        
#  로드벨런싱[SecurityGroup,Subnets]
#  EcsElasticLoadBalancer:
#    Condition: CreateELB
#    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
#    Properties:
#      Name: ECS-first-run-alb
#      SecurityGroups:
#        - !Ref AlbSecurityGroup
#      Subnets:
#        - !Ref PubSubnetAz1
#        - !Ref PubSubnetAz2
#      Scheme: internet-facing
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets: !Ref Subnets
      SecurityGroups:
        - !GetAtt SecurityGroup.Outputs.SecurityGroup
      Tags:
        - Key: Name
          Value: !Ref Name
#대상 그룹 LoadBalancer의 리스너와 결합
#  DefaultTargetGroup:
#    Condition: CreateELB
#    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
#    Properties:
#      Name: !Ref TargetGroupName
#      VpcId: !Ref Vpc
#      Port: !Ref ElbPort
#      Protocol: HTTP
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn: LoadBalancer
    Properties:
      VpcId: !Ref VpcId
      Port: !Ref ElbPort
      Protocol: HTTP
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 30
      Tags:
        - Key: Name
          Value: !Ref Name
#로드벤런싱 리스너
#LoadBalancerListener:
#    조건
#    Condition: CreateELB 
#    Type: 'AWS::ElasticLoadBalancingV2::Listener'
#    Properties:
#      LoadBalancerArn: !Ref EcsElasticLoadBalancer
#      Port: !Ref ElbPort
#      Protocol: HTTP
#      DefaultActions:
#        - Type: forward
#          TargetGroupArn: !Ref DefaultTargetGroup
  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: !Ref ElbPort
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref LoadBalancerListener
      Priority: 1
      Conditions:
        - Field: path-pattern
          Values:
            - /
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward

Outputs:
  TargetGroup:
    Value: !Ref TargetGroup

  ElbPort:
    Value: !Ref ElbPort
    
  ServiceUrl:
    Description: URL of the load balancer for the sample service.
    Value: !Sub http://${LoadBalancer.DNSName}

  SecurityGroup:
    Value: !GetAtt SecurityGroup.Outputs.SecurityGroup
